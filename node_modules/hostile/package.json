{
  "name": "hostile",
  "version": "0.2.2",
  "description": "Simple /etc/hosts manipulation",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "license": "MIT",
  "dependencies": {
    "split": "*",
    "through": "*"
  },
  "keywords": [
    "/etc/hosts",
    "hosts file",
    "hostname",
    "etc hosts",
    "change hosts"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/hostile"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# hostile\n[![NPM Version](http://img.shields.io/npm/v/hostile.svg)](https://npmjs.org/package/hostile)\n[![NPM](http://img.shields.io/npm/dm/hostile.svg)](https://npmjs.org/package/hostile)\n[![Gittip](http://img.shields.io/gittip/feross.svg)](https://www.gittip.com/feross/)\n\n### Simple, programmatic `/etc/hosts` manipulation (in node.js)\n\n![hostile](https://raw.github.com/feross/hostile/master/img.png)\n\n## install\n\n```\nnpm install hostile\n```\n\n## os support\n\n- **OS X** and **Linux**: Assumes hosts file will be at `/etc/hosts`.\n- **Windows**: Assumes hosts file is at `/Windows/System32/drivers/etc/hosts`.\n\n## must use `sudo`!\n\nIf your OS requires admin privileges to edit the hosts file (most OSs do), then you'll need to run your node script with `sudo`. I use `hostile` in a command line script, so running with `sudo` is easy and not a security risk.\n\nI wouldn't recommend running your production node server with admin privileges unless you downgrade to a normal user with [`process.setuid(id)`](http://nodejs.org/api/process.html#process_process_setuid_id) before you start accepting requests.\n\n## usage\n\n```js\nvar hostile = require('hostile')\nhostile.set('127.0.0.1', 'cdn.peercdn.com', function (err) {\n  if (err) {\n    console.error(err)\n  } else {\n    console.log('set /etc/hosts successfully!')\n  }\n})\n```\n\nThis adds a rule to /etc/hosts. If the rule already exists, then this does nothing.\n\n```js\nhostile.remove('127.0.0.1', 'cdn.peercdn.com', function (err) {\n  if (err) {\n    console.error(err)\n  } else {\n    console.log('set /etc/hosts successfully!')\n  }\n})\n```\n\nThis removes a rule from /etc/hosts. If the rule does not exist, then this does\nnothing.\n\n## advanced usage\n\nFor other features (not documented), see `index.js`. If this module doesn't do exactly what you need, feel free to send a pull request!\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/feross/hostile/issues"
  },
  "homepage": "https://github.com/feross/hostile",
  "_id": "hostile@0.2.2",
  "dist": {
    "shasum": "b23b3159283194e2c4ca61f330c8b5403ef2e074"
  },
  "_from": "hostile@~0.2.0",
  "_resolved": "https://registry.npmjs.org/hostile/-/hostile-0.2.2.tgz"
}
